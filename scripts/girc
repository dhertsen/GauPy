#! /usr/bin/env python2.7

import shutil
import sys
import gaupy.log as log
import argparse

parser = argparse.ArgumentParser('Write IRC Gaussian input files from TS.')
parser.add_argument('files', nargs='*', help='Gaussian output files',
                    default=sys.stdin)
group = parser.add_mutually_exclusive_group()
group.add_argument('--fwd', '-f', action='store_true',
                   help='Forward IRC input file only')
group.add_argument('--rev', '-r', action='store_true',
                   help='Reverse IRC input file only')
parser.add_argument('--maxcycle', default=900,
                    help='Gaussian irc(maxcycle) keyword')
parser.add_argument('--maxpoints', default=10,
                    help='Gaussian irc(maxpoints) keyword')
parser.add_argument('--stepsize', default=10,
                    help='Gaussian irc(stepsize) keyword')
parser.add_argument('--extra', default='',
                    help='Extra input for route section')
parser.add_argument('--replacets', action='store_true',
                    help='Replace typical ts parts of filename\
                    (ts, tsopt, etc.) with irc. Otherwise, irc\
                    will be added to the filename')
parser.add_argument('--nochk', action='store_true',
                    help='Do not look for TS checkpoint file for'
                    + ' force constants and geometry')
args = parser.parse_args()

# TODO This is probably not the correct way to read from stdin.
try:
    files = args.files.read().split()
except:
    files = args.files

# If neither fwd, nor rev are specified as an option, create both files.
if not args.fwd and not args.rev:
    args.fwd = args.rev = True


for f in args.files:
    l = log.LOGFile(f)
    ircfiles = l.files.ts_to_irc(replace=args.replacets)

    def without_chk():
        l.keywords = [l.lot, ('irc(%s,calcfc,maxcycle=%s,maxpoints=%i,'
                              + 'stepsize=%i)') % (e, int(args.maxcycle),
                                                   int(args.maxpoints),
                                                   int(args.stepsize)), args.extra]

    def with_chk():
        shutil.copy(l.files.chk, ircfiles[d].chk)
        print('%s copied to %s.' % (l.files.chk, ircfiles[d].chk))
        l.geometry = None
        l.keywords = [l.lot, ('irc(%s,rcfc,maxcycle=%i,maxpoints=%i,'
                              + 'stepsize=%i)') % (e, int(args.maxcycle),
                                                   int(args.maxpoints),
                                                   int(args.stepsize)),
                      'geom=checkpoint', args.extra]

    for d, e in [('fwd', 'forward'), ('rev', 'reverse')]:
        if getattr(args, d):
            if args.nochk:
                without_chk()
            else:
                try:
                    with_chk()
                except:
                    without_chk()
            l.write_input(ircfiles[d].com)
