#! /usr/bin/env python2.7

import argparse
import gaupy.filenames as filenames

parser = argparse.ArgumentParser(
    'Convert xyz file or Avogadro gau file to Gaussian input file.'
    + 'Raw cartesian coordinates w/o comment and number of atoms will work,'
    + ' save them as xyz.')
parser.add_argument('--nproc', '-n', default='8',
                    help='Number of processors')
parser.add_argument('--mem', default='16GB',
                    help='Memory')
parser.add_argument('--method', '-m', help='Method')
parser.add_argument('--basis', '-b', default=None,
                    help='Basis set')
parser.add_argument('--ts', '-t', action='store_true',
                    help='Transition state calculation')
parser.add_argument('--spe', '-s', action='store_true',
                    help='Single point calculation, no opt or freq.')
parser.add_argument('--charge', '-c', default='0',
                    help='Charge')
parser.add_argument('--extra', '-x', default='',
                    help='Extra route section input')
parser.add_argument('files', nargs='*', help='xyz or gau files')
args = parser.parse_args()

for f in args.files:
    lines = open(f).readlines()
    fs = filenames.GaussianFile(f)
    if f.endswith('xyz'):
        if len(lines[0].split()) == 4:
            skiplines = 0
        else:
            skiplines = 2
    elif f.endswith('gau'):
        skiplines = 5
    open(fs.com, 'w').write('''%%nproc=%(nproc)s
%%mem=%(mem)s
%%chk=%(chk)s
#%(method)s%(basis)s %(opt)s%(ts)s %(freq)s %(extra)s

comment

%(charge)s 1
%(geometry)s

    ''' % {'nproc': args.nproc,
           'mem': args.mem,
           'chk': fs.root,
           'method': args.method,
           'basis': '/' + args.basis if args.basis else '',
           'ts': '(ts,noeigentest,calcfc)' if args.ts else '',
           'opt': 'opt' if not args.spe else '',
           'freq': 'freq' if not args.spe else '',
           'charge': args.charge,
           'geometry': ''.join(lines[skiplines:]),
           'extra': args.extra
           })
    print(fs.com + ' written.')
